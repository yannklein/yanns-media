// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Media {
  id                    String      @default(cuid()) @id
  createdAt             DateTime    @default(now()) @map(name: "created_at")
  updatedAt             DateTime    @updatedAt @map(name: "updated_at")
  dropbox_id            String
  path                  String
  date                  DateTime?
  latitude              Float?
  longitude             Float?
  event                 String?
  images                Image[]     @relation(name: "MediaImages")
  @@map(name: "medias")
}

model Image {
  id       String @default(cuid()) @id
  publicId String @unique
  format   String
  version  Int
  media    Media   @relation(name: "MediaImages", fields: [mediaId], references: [id])
  mediaId  String
  personOnImages  PersonOnImage[]     @relation(name: "ImagePersonOnImages")
  @@map(name: "images")
}

model Person {
  id        String @default(cuid()) @id
  createdAt             DateTime    @default(now()) @map(name: "created_at")
  updatedAt             DateTime    @updatedAt @map(name: "updated_at")
  name      String
  embedding Float[]
  personOnImages  PersonOnImage[]     @relation(name: "PersonPersonOnImages")
  @@map(name: "persons")
}

model PersonOnImage {
  id       String @default(cuid()) @id
  createdAt             DateTime    @default(now()) @map(name: "created_at")
  updatedAt             DateTime    @updatedAt @map(name: "updated_at")
  image    Image   @relation(name: "ImagePersonOnImages", fields: [imageId], references: [id])
  imageId  String
  person    Person   @relation(name: "PersonPersonOnImages", fields: [personId], references: [id])
  personId  String
  @@map(name: "person_on_images")
}